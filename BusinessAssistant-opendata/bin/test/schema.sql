CREATE TABLE IF NOT EXISTS clientes (
  ID_CLIENTES IDENTITY PRIMARY KEY,
  RAZON_SOCIAL VARCHAR(45) NOT NULL,
  CIF VARCHAR(45) NOT NULL,
  DIRECCION VARCHAR(45) NOT NULL,
  TELEFONO VARCHAR(45) NOT NULL,
  EMAIL VARCHAR(45) NOT NULL);

CREATE TABLE IF NOT EXISTS roles (
  ID_ROL IDENTITY PRIMARY KEY,
  ROL VARCHAR(45) NOT NULL);


CREATE TABLE IF NOT EXISTS tipos_proveedores (
  ID_TIPO_PROVEEDOR IDENTITY PRIMARY KEY,
  TIPO_PROVEEDOR VARCHAR(45) NOT NULL);


CREATE TABLE IF NOT EXISTS tipos_vinos (
  ID_VINO IDENTITY PRIMARY KEY,
  CATEGORIA VARCHAR(45) NOT NULL);
  
  
CREATE TABLE IF NOT EXISTS empleados (
  ID_EMP IDENTITY PRIMARY KEY,
  NOMBRE VARCHAR(45) NOT NULL,
  APELLIDOS VARCHAR(45) NOT NULL,
  NIF VARCHAR(45) NOT NULL,
  EMAIL VARCHAR(45) NOT NULL,
  ID_ROL INTEGER  NOT NULL,
  DIRECCION VARCHAR(45) NOT NULL,
  FOREIGN KEY (ID_ROL) REFERENCES roles (ID_ROL));


CREATE TABLE IF NOT EXISTS productos (
  ID_PRODUCTO IDENTITY PRIMARY KEY,
  DENOMINACION VARCHAR(45) NOT NULL,
  PVP INTEGER NOT NULL,
  RATIO INTEGER NOT NULL,
  P_NETO INTEGER NOT NULL,
  ID_VINO INTEGER  NOT NULL,
  EXISTENCIAS INTEGER NOT NULL,
  ID_TIPO_PROVEEDOR INTEGER  NOT NULL,
  DENOMINACION_ORIGEN VARCHAR(45) default NULL,
  FOREIGN KEY (ID_VINO) REFERENCES tipos_vinos (ID_VINO),
  FOREIGN KEY (ID_TIPO_PROVEEDOR) REFERENCES tipos_proveedores (ID_TIPO_PROVEEDOR)) ;

CREATE TABLE IF NOT EXISTS pedidos (
  ID_SOLICITUD IDENTITY PRIMARY KEY,
  ID_PEDIDO INTEGER  NOT NULL,
  ID_CLIENTES INTEGER  NOT NULL,
  ID_PRODUCTO INTEGER  NOT NULL,
  PVP INTEGER  NOT NULL,
  DIRECCION_ENTREGA VARCHAR(45) NOT NULL,
  UNIDADES INTEGER  NOT NULL,
  FOREIGN KEY (ID_CLIENTES) REFERENCES clientes (ID_CLIENTES),
  FOREIGN KEY (ID_PRODUCTO) REFERENCES productos (ID_PRODUCTO)) ;

  
CREATE VIEW IF NOT EXISTS envios AS
	select pedidos.ID_PEDIDO 
	AS ID_PEDIDO,pedidos.ID_CLIENTES 
	AS ID_CLIENTES,clientes.RAZON_SOCIAL 
	AS RAZON_SOCIAL,pedidos.ID_PRODUCTO 
	AS ID_PRODUCTO,productos.DENOMINACION 
	AS DENOMINACION,productos.ID_VINO 
	AS ID_VINO,tipos_vinos.CATEGORIA 
	AS CATEGORIA,pedidos.UNIDADES 
	AS UNIDADES,pedidos.PVP 
	AS PVP from pedidos 
	left join clientes on pedidos.ID_CLIENTES = clientes.ID_CLIENTES
	left join productos on pedidos.ID_PRODUCTO = productos.ID_PRODUCTO
	left join tipos_vinos on productos.ID_VINO = tipos_vinos.ID_VINO;
	
	
CREATE VIEW IF NOT EXISTS inventario AS
	select productos.ID_PRODUCTO AS ID_PRODUCTO,
	productos.DENOMINACION AS DENOMINACION,
	tipos_vinos.CATEGORIA AS CATEGORIA,
	tipos_proveedores.TIPO_PROVEEDOR AS TIPO_PROVEEDOR,
	productos.EXISTENCIAS AS EXISTENCIAS from productos 
	left join tipos_vinos ON productos.ID_VINO = tipos_vinos.ID_VINO
	left join tipos_proveedores ON productos.ID_TIPO_PROVEEDOR = tipos_proveedores.ID_TIPO_PROVEEDOR
	order by productos.ID_PRODUCTO;	

	
CREATE VIEW IF NOT EXISTS listado_clientes AS
	select clientes.ID_CLIENTES AS ID_CLIENTES,
	clientes.RAZON_SOCIAL AS RAZON_SOCIAL,
	clientes.CIF AS CIF,
	clientes.DIRECCION AS DIRECCION,
	clientes.TELEFONO AS TELEFONO,
	clientes.EMAIL AS EMAIL from clientes;

	
CREATE VIEW IF NOT EXISTS listado_emp AS
	select empleados.ID_EMP AS ID_EMP,
	empleados.NOMBRE AS NOMBRE,
	empleados.APELLIDOS AS APELLIDOS,
	empleados.NIF AS NIF,
	empleados.EMAIL AS EMAIL,
	empleados.ID_ROL AS ID_ROL,
	empleados.DIRECCION AS DIRECCION from empleados;

	
CREATE VIEW IF NOT EXISTS listado_internos AS
	select productos.ID_PRODUCTO AS ID_PRODUCTO,
	productos.DENOMINACION AS DENOMINACION,
	tipos_vinos.CATEGORIA AS CATEGORIA,
	productos.EXISTENCIAS AS EXISTENCIAS,
	productos.P_NETO AS P_NETO,
	productos.RATIO AS RATIO,
	productos.PVP AS PVP 
	from productos 
	left join tipos_vinos ON productos.ID_VINO = tipos_vinos.ID_VINO
	where productos.ID_TIPO_PROVEEDOR = 1;


CREATE VIEW IF NOT EXISTS listado_productos AS
	select productos.ID_PRODUCTO AS ID_PRODUCTO,
	productos.DENOMINACION AS DENOMINACION,
	tipos_vinos.CATEGORIA AS CATEGORIA,
	productos.PVP AS PVP from productos 
	left join tipos_vinos on productos.ID_VINO = tipos_vinos.ID_VINO;
	
CREATE VIEW IF NOT EXISTS salidas AS
	select productos.ID_PRODUCTO AS ID_PRODUCTO,
	productos.DENOMINACION AS DENOMINACION,
	productos.P_NETO AS P_NETO,
	tipos_vinos.CATEGORIA AS CATEGORIA,
	tipos_proveedores.TIPO_PROVEEDOR AS TIPO_PROVEEDOR from productos
	left join tipos_vinos on productos.ID_VINO = tipos_vinos.ID_VINO
	left join tipos_proveedores on productos.ID_TIPO_PROVEEDOR = tipos_proveedores.ID_TIPO_PROVEEDOR
	order by ID_PRODUCTO;
	
